# Write your query or mutation here
query dbCount {
  bookCount
  authorCount
}

query allBooks {
  allBooks {
    title
    author {
      name
      born
    }
    published
    genres
  }
}

query allBooksByAuthor {
  allBooks(author: "Martin Fowler") {
    title
  }
}

query allBooksByGenre {
  allBooks(genre: "refactoring") {
    title
    author {
      name
      born
    }
  }
}

query allBooksByAuthorAndGenre {
  allBooks(author: "Robert Martin", genre: "refactoring") {
    title
    author {
      name
      born
    }
  }
}

query allAuthors {
  allAuthors {
    name
    bookCount
  }
}

query loggedInUser {
  me {
    username
    favoriteGenre
  }
}

mutation addBook {
  addBook(
    title: "The Demon",
    published: 1872,
    author: "Fyodor Dostoevsky",
    genres: ["classic", "revolution"]
  ) {
    title
    author {
      name
      born
    }
  }
}

mutation addBookNonExistAuthor {
  addBook(
    title: "Pimeyden tango"
    author: "Reijo Mäki"
    published: 1997
    genres: ["crime"]
  ) {
    title
    author {
      name
      born
    }
  }
}

mutation editAuthor {
  editAuthor(name: "Reijo Mäki", setBornTo: 1958) {
    name
    born
  }
}

mutation editNonExistAuthor {
  editAuthor(name: "Helo", setBornTo: 1958) {
    name
    born
  }
}

mutation addNewBook {
  addBook(
    title: "NoSQL Distilled"
    author: "Martin Fowler"
    published: 2012
    genres: ["database", "nosql"]
  ) {
    title
    author {
      name
      born
    }
  }
}

mutation createUser {
  createUser(username: "root", favoriteGenre: "database") {
    username
    favoriteGenre
  }
}

mutation loginUser {
  login(username: "root", password: "toor") {
    value
  }
}

subscription bookAdded {
  bookAdded {
    title
    author {
      name
      born
    }
    published
    genres
  }
}

